spring.datasource.initial_url=jdbc:mysql://localhost:3306/?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.initial_url=jdbc:mysql://127.0.0.1:3306/?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/hims?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=199986
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.createDatabase=CREATE DATABASE IF NOT EXISTS HIMS;
spring.datasource.useDatabase=USE HIMS;
spring.datasource.createUser=CREATE TABLE IF NOT EXISTS user\
  (id int NOT NULL AUTO_INCREMENT,\
   name varchar(20),\
   password varchar(50),\
   age varchar(20),\
   email varchar(50),\
   phone varchar(20),\
   u_type varchar(20),\
   primary key (id),\
   unique index (id),\
   index (u_type))ENGINE=InnoDB DEFAULT CHARSET=utf8;
spring.datasource.insertUser=INSERT IGNORE INTO user (id,name,password,age,email,phone,u_type) VALUES \
  (1,'doctor1','1','30','doctor1@163.com','18912345678','doctor'),\
  (2,'doctor2','123456','32','doctor2@163.com','18922345678','doctor'),\
  (3,'doctor3','123456','33','doctor3@163.com','18932345678','doctor'),\
  (4,'doctor4','123456','34','doctor4@163.com','18942345678','doctor'),\
  (5,'doctor5','123456','35','doctor5@163.com','18952345678','doctor'),\
  (6,'doctor6','123456','36','doctor6@163.com','18962345678','doctor'),\
  (7,'hnurse1','123456','27','hnurse1@163.com','18312345678','h_nurse'),\
  (8,'hnurse2','123456','30','hnurse2@163.com','18322345678','h_nurse'),\
  (9,'hnurse3','123456','32','hnurse3@163.com','18332345678','h_nurse'),\
  (10,'hnurse4','123456','33','hnurse4@163.com','18342345678','h_nurse'),\
  (11,'hnurse5','123456','34','hnurse5@163.com','18352345678','h_nurse'),\
  (12,'hnurse6','123456','35','hnurse6@163.com','18362345678','h_nurse'),\
  (13,'wnurse1','123456','35','wnurse1@163.com','18212345678','w_nurse'),\
  (14,'wnurse2','123456','35','wnurse2@163.com','18222345678','w_nurse'),\
  (15,'wnurse3','123456','35','wnurse3@163.com','18232345678','w_nurse'),\
  (16,'wnurse4','123456','35','wnurse4@163.com','18242345678','w_nurse'),\
  (17,'wnurse5','123456','35','wnurse5@163.com','18252345678','w_nurse'),\
  (18,'wnurse6','123456','35','wnurse6@163.com','18262345678','w_nurse'),\
  (19,'wnurse7','123456','35','wnurse7@163.com','18272345678','w_nurse'),\
  (20,'wnurse8','123456','35','wnurse8@163.com','18282345678','w_nurse'),\
  (21,'wnurse9','123456','35','wnurse9@163.com','18292345678','w_nurse'),\
  (22,'enurse1','123456','35','enurse1@163.com','18112345678','e_nurse'),\
  (23,'enurse2','123456','35','enurse2@163.com','18122345678','e_nurse'),\
  (24,'enurse3','123456','35','enurse3@163.com','18132345678','e_nurse'),\
  (25,'enurse4','123456','35','enurse4@163.com','18142345678','e_nurse'),\
  (26,'enurse5','123456','35','enurse5@163.com','18152345678','e_nurse'),\
  (27,'enurse6','123456','35','enurse6@163.com','18162345678','e_nurse'),\
  (28,'wnurse10','123456','35','wnurse10@163.com','18292345611','w_nurse'),\
  (29,'wnurse11','123456','35','wnurse11@163.com','18292345612','w_nurse'),\
  (30,'wnurse12','123456','35','wnurse12@163.com','18292345613','w_nurse'),\
  (31,'wnurse13','123456','35','wnurse13@163.com','18292345614','w_nurse'),\
  (32,'wnurse14','123456','35','wnurse14@163.com','18292345615','w_nurse'),\
  (33,'Lu Yan','123456','35','wnurse15@163.com','18292345616','w_nurse'),\
  (34,'Wu S','123456','35','wnurse16@163.com','18292345617','w_nurse'),\
  (35,'Ci W','123456','35','wnurse17@163.com','18292345618','w_nurse'),\
  (36,'Wang J','123456','35','wnurse18@163.com','18292445618','w_nurse'),\
  (37,'Xiu H','123456','35','wnurse19@163.com','18292545618','w_nurse'),\
  (38,'Dai Y','123456','35','wnurse20@163.com','18292645618','w_nurse'),\
  (39,'Fang Z','123456','35','wnurse21@163.com','18292745618','w_nurse'),\
  (40,'Zhou D','123456','35','wnurse22@163.com','18292845618','w_nurse'),\
  (41,'Tina C','123456','35','wnurse23@163.com','18294345618','w_nurse'),\
  (42,'Hu Y','123456','35','wnurse24@163.com','18292445618','w_nurse'),\
  (43,'Yu Q','123456','35','wnurse25@163.com','18252345618','w_nurse'),\
  (44,'Di M','123456','35','wnurse26@163.com','18292347618','w_nurse'),\
  (45,'Li Y','123456','35','wnurse27@163.com','18292348618','w_nurse'),\
  (46,'Tina M','123456','35','wnurse28@163.com','18292349618','w_nurse'),\
  (47,'Wu L','123456','35','wnurse29@163.com','18292343618','w_nurse'),\
  (48,'Gong Y','123456','35','wnurse30@163.com','18292335618','w_nurse'),\
  (49,'Zhou Z','123456','35','wnurse31@163.com','18292745618','w_nurse'),\
  (50,'Mao M','123456','35','wnurse32@163.com','18292285618','w_nurse');
spring.datasource.dropTrigger_on_patient=DROP TRIGGER IF EXISTS transfer_patient;
spring.datasource.drop_transfer_patient_after_add_new_wnurse=DROP TRIGGER IF EXISTS transfer_patient_after_add_new_wnurse;
spring.datasource.dropTrigger_on_bed=DROP TRIGGER IF EXISTS occupy_bed;
#spring.datasource.createTrigger_on_patient=CREATE TRIGGER transfer_patient AFTER UPDATE ON patient FOR EACH ROW \
#  if new.state = "discharge" or new.state = "dead" then \
#  BEGIN \
#  declare p_id int; \
#  update bed set state = "free" where id = new.bed_id; \
#  select IFNULL(min(id),-1) into p_id from patient where rating = new.rating and is_to_be_transferred = 1 and bed_id is null; \
#  if p_id != -1 then \
#  update patient set w_nurse_id = new.w_nurse_id,bed_id = new.bed_id,state = "hospitalized",is_to_be_transferred = 0 where id = p_id; \
#  update bed set state = "occupied" where id = new.bed_id; \
#  else \
#  select IFNULL(min(id),-1) into p_id from patient where rating = new.rating and is_to_be_transferred = 1 and bed_id is not null; \
#  if p_id != -1 then \
#  update patient set w_nurse_id = new.w_nurse_id,bed_id = new.bed_id,is_to_be_transferred = 0 where id = p_id; \
#  update bed set state = "occupied" where id = new.bed_id; \
#  END if; \
#  END;
#spring.datasource.createTrigger_on_patient=CREATE TRIGGER transfer_patient AFTER UPDATE ON patient FOR EACH ROW if new.state = "discharge" or new.state = "dead" then BEGIN declare p_id int; update bed set state = "free" where id = new.bed_id; select IFNULL(min(id),-1) into p_id from patient where rating = new.rating and is_to_be_transferred = 1 and bed_id is null; if p_id != -1 then update patient set w_nurse_id = new.w_nurse_id,bed_id = new.bed_id,state = "hospitalized",is_to_be_transferred = 0 where id = p_id; update bed set state = "occupied" where id = new.bed_id; else select IFNULL(min(id),-1) into p_id from patient where rating = new.rating and is_to_be_transferred = 1 and bed_id is not null; if p_id != -1 then update patient set w_nurse_id = new.w_nurse_id,bed_id = new.bed_id,is_to_be_transferred = 0 where id = p_id; update bed set state = "occupied" where id = new.bed_id; END if; END;
#spring.datasource.createPatient=CREATE TABLE IF NOT EXISTS patient\
#  (id int NOT NULL AUTO_INCREMENT,\
#   name varchar(20),\
#   age varchar(20),\
#   phone varchar(20),\
#   address varchar(50),\
#   rating varchar(20),\
#   e_nurse_id int DEFAULT 0,\
#   w_nurse_id int DEFAULT 0,\
#   bed_id int DEFAULT 0,\
#   state varchar(20) DEFAULT '',\
#   is_to_be_released boolean DEFAULT 0,\
#   is_to_be_transferred boolean DEFAULT 0,\
#   primary key (id),\
#   foreign key (e_nurse_id) references user(id),\
#   foreign key (w_nurse_id) references user(id),\
#   foreign key (bed_id) references bed(id),\
#   unique index (id),\
#   index (e_nurse_id),\
#   index (w_nurse_id),\
#   index (bed_id),\
#   index (state)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
spring.datasource.createPatient=CREATE TABLE IF NOT EXISTS patient\
  (id int NOT NULL AUTO_INCREMENT,\
   name varchar(20),\
   age varchar(20),\
   phone varchar(20),\
   address varchar(50),\
   rating varchar(20),\
   e_nurse_id int DEFAULT 0,\
   w_nurse_id int DEFAULT 0,\
   bed_id int DEFAULT 0,\
   state varchar(20) DEFAULT '',\
   is_to_be_released boolean DEFAULT 0,\
   is_to_be_transferred boolean DEFAULT 0,\
   primary key (id),\
   unique index (id),\
   index (e_nurse_id),\
   index (w_nurse_id),\
   index (bed_id),\
   index (state)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
#spring.datasource.insertPatient=INSERT IGNORE INTO patient (id,name,age,phone,address,rating,e_nurse_id,w_nurse_id,bed_id,state,is_to_be_released,is_to_be_transferred) VALUES\
#  (1,'bb','30','12345678901','fudan','mild',22,13,1,'hospitalized',0,0),\
#  (2,'cc','30','12345678902','fudan','mild',23,13,2,'hospitalized',0,0);
spring.datasource.createDaily_report=CREATE TABLE IF NOT EXISTS daily_report\
  (id int NOT NULL AUTO_INCREMENT,\
   p_id int,\
   date DATE,\
   temperature float,\
   symptom varchar(50),\
   state varchar(20),\
   w_nurse_id int,\
   primary key (id),\
   foreign key (p_id) references patient(id),\
   foreign key (w_nurse_id) references user(id),\
   index (p_id),\
   index (w_nurse_id),\
   index (date))ENGINE=InnoDB DEFAULT CHARSET=utf8;
spring.datasource.createNAT_report=CREATE TABLE IF NOT EXISTS nat_report\
  (id int NOT NULL AUTO_INCREMENT,\
   p_id int,\
   result varchar(20),\
   date DATE,\
   time TIME,\
   primary key (id),\
   foreign key (p_id) references patient(id),\
   index (p_id),\
   index (date),\
   index (time))ENGINE=InnoDB DEFAULT CHARSET=utf8;
spring.datasource.createTreatment_area=CREATE TABLE IF NOT EXISTS treatment_area\
  (id int NOT NULL AUTO_INCREMENT,\
   type varchar(20),\
   doctor_id int,\
   h_nurse_id int,\
   primary key (id),\
   foreign key (doctor_id) references user(id),\
   foreign key (h_nurse_id) references user(id))ENGINE=InnoDB DEFAULT CHARSET=utf8;
spring.datasource.insertTreatment_area=INSERT IGNORE INTO treatment_area (id,type,doctor_id,h_nurse_id) VALUES\
  (1,'mild',1,7),\
  (2,'severe',2,8),\
  (3,'critical',3,9);
spring.datasource.createWard=CREATE TABLE IF NOT EXISTS ward\
  (id int NOT NULL AUTO_INCREMENT,\
   t_area_id int DEFAULT 0,\
   primary key (id),\
   foreign key (t_area_id) references treatment_area(id),\
   index (t_area_id))ENGINE=InnoDB DEFAULT CHARSET=utf8;
#spring.datasource.insertWard=INSERT IGNORE INTO ward (id,t_area_id) VALUES\
#  (1,1),(2,1),(3,1),(4,1),(5,1),\
#  (6,2),(7,2),(8,2),(9,2),(10,2),\
#  (11,3),(12,3),(13,3),(14,3),(15,3);
spring.datasource.insertWard=INSERT IGNORE INTO ward (id,t_area_id) VALUES\
  (1,1),(2,2),(3,3);
#spring.datasource.insertWard=INSERT IGNORE INTO ward (id,t_area_id) VALUES\
#  (1,1),(2,3);
spring.datasource.createWard_nurse_ward=CREATE TABLE IF NOT EXISTS ward_nurse_ward\
  (w_nurse_id int NOT NULL,\
   w_id int,\
   primary key (w_nurse_id),\
   foreign key (w_nurse_id) references user(id),\
   foreign key (w_id) references ward(id),\
   index (w_nurse_id),\
   index (w_id))ENGINE=InnoDB DEFAULT CHARSET=utf8;
#spring.datasource.insertWard_nurse_ward=INSERT IGNORE INTO ward_nurse_ward (w_nurse_id,w_id) VALUES\
#  (13,1),(14,1),(15,2),(16,3),(17,4),(18,6),(19,7),(20,8),(21,11),(28,12),(49,13);
spring.datasource.insertWard_nurse_ward=INSERT IGNORE INTO ward_nurse_ward (w_nurse_id,w_id) VALUES\
  (13,1),(14,2),(15,3);
spring.datasource.createBed=CREATE TABLE IF NOT EXISTS bed\
  (id int NOT NULL AUTO_INCREMENT,\
   w_id int DEFAULT 0,\
   state varchar(20),\
   primary key (id),\
   foreign key (w_id) references ward(id),\
   index (w_id),\
   index (state))ENGINE=InnoDB DEFAULT CHARSET=utf8;
#spring.datasource.insertBed=INSERT IGNORE INTO bed (id,w_id,state) VALUES\
#  (1,1,'occupied'),(2,1,'occupied'),(3,1,'free'),(4,1,'free'),\
#  (5,2,'free'),(6,2,'free'),(7,2,'free'),(8,2,'free'),\
#  (9,3,'free'),(10,3,'free'),(11,3,'free'),(12,3,'free'),\
#  (13,4,'free'),(14,4,'free'),(15,4,'free'),(16,4,'free'),\
#  (17,5,'free'),(18,5,'free'),(19,5,'free'),(20,5,'free'),\
#  (21,6,'free'),(22,6,'free'),\
#  (23,7,'free'),(24,7,'free'),\
#  (25,8,'free'),(26,8,'free'),\
#  (27,9,'free'),(28,9,'free'),\
#  (29,10,'free'),(30,10,'free'),\
#  (31,11,'free'),(32,12,'free'),(33,13,'free'),(34,14,'free'),(35,15,'free');
spring.datasource.insertBed=INSERT IGNORE INTO bed (id,w_id,state) VALUES\
  (1,1,'free'),(2,1,'free'),(3,1,'free'),(4,1,'free'),(5,2,'free'),(6,2,'free'),(7,2,'free'),(8,3,'free');
server.port=8080
